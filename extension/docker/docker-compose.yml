version: '3.1'

services:

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example
    ports:
      - 5432:5432

  adminer:
    image: adminer
    restart: always
    ports:
      - 8020:8080
  
  redis:
    image: redis:6.2
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
  
  api: 
    container_name: api
    build: ./api
    ports :
      - 8080:8080
    environment:
      PGUSER: postgres
      PGHOST: db
      PGPASSWORD: example
      PGDATABASE: testing
      PGPORT: 5432
    links:
      - redis:queue
      - db:db

  logger:
    tty: true
    container_name: logger
    build:
      context: ./pythonJobs
      dockerfile: ./Dockerfile_Logger
    links:
      - db:db
      - redis:queue
  
  attacker:
    tty: true
    container_name: attacker
    build:
      context: ./pythonJobs
      dockerfile: ./Dockerfile_Attacker
    links:
      - redis:queue